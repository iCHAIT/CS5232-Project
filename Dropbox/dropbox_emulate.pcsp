//=======================Model Details===========================
enum{X,A,B,C,D,E,F,Y,null}; // 

var trans = null;

#define goal trans == Y;

FromX = pcase {
       [0] : trans_to_Start{trans=X} -> FromX
       [1] : trans_to_Client_Hello{trans=A} -> FromA
       [0] : trans_to_Server_Hello{trans=B} -> FromB
       [0] : trans_to_Server_Hello_Done{trans=C} -> FromC
       [0] : trans_to_Client_KE{trans=D} -> FromD
       [0] : trans_to_New_Session_Ticket{trans=E} -> FromE
       [0] : trans_to_Application_Data{trans=F} -> FromF
       [0] : trans_to_Stop{trans=Y} -> Stop
};

FromA = pcase {
       [0] : trans_to_Start{trans=X} -> FromX
       [0] : trans_to_Client_Hello{trans=A} -> FromA
       [1] : trans_to_Server_Hello{trans=B} -> FromB
       [0] : trans_to_Server_Hello_Done{trans=C} -> FromC
       [0] : trans_to_Client_KE{trans=D} -> FromD
       [0] : trans_to_New_Session_Ticket{trans=E} -> FromE
       [0] : trans_to_Application_Data{trans=F} -> FromF
       [0] : trans_to_Stop{trans=Y} -> Stop
};

FromB = pcase {
       [0] : trans_to_Start{trans=X} -> FromX
       [0] : trans_to_Client_Hello{trans=A} -> FromA
	   [0] : trans_to_Server_Hello{trans=B} -> FromB
       [1] : trans_to_Server_Hello_Done{trans=C} -> FromC
       [0] : trans_to_Client_KE{trans=D} -> FromD
       [0] : trans_to_New_Session_Ticket{trans=E} -> FromE
       [0] : trans_to_Application_Data{trans=F} -> FromF
       [0] : trans_to_Stop{trans=Y} -> Stop
};

FromC = pcase {
       [0] : trans_to_Start{trans=X} -> FromX
       [0] : trans_to_Client_Hello{trans=A} -> FromA
	   [0] : trans_to_Server_Hello{trans=B} -> FromB
       [0] : trans_to_Server_Hello_Done{trans=C} -> FromC
       [1] : trans_to_Client_KE{trans=D} -> FromD
       [0] : trans_to_New_Session_Ticket{trans=E} -> FromE
       [0] : trans_to_Application_Data{trans=F} -> FromF
       [0] : trans_to_Stop{trans=Y} -> Stop
};

FromD = pcase {
       [0] : trans_to_Start{trans=X} -> FromX
       [0] : trans_to_Client_Hello{trans=A} -> FromA
	   [0] : trans_to_Server_Hello{trans=B} -> FromB
       [0] : trans_to_Server_Hello_Done{trans=C} -> FromC
       [0] : trans_to_Client_KE{trans=D} -> FromD
       [1] : trans_to_New_Session_Ticket{trans=E} -> FromE
       [0] : trans_to_Application_Data{trans=F} -> FromF
       [0] : trans_to_Stop{trans=Y} -> Stop
};

FromE = pcase {
       [0] : trans_to_Start{trans=X} -> FromX
       [0] : trans_to_Client_Hello{trans=A} -> FromA
	   [0] : trans_to_Server_Hello{trans=B} -> FromB
       [0] : trans_to_Server_Hello_Done{trans=C} -> FromC
       [0] : trans_to_Client_KE{trans=D} -> FromD
       [0] : trans_to_New_Session_Ticket{trans=E} -> FromE
       [1] : trans_to_Application_Data{trans=F} -> FromF
       [0] : trans_to_Stop{trans=Y} -> Stop
};

FromF = pcase {
       [0] : trans_to_Start{trans=X} -> FromX
       [0] : trans_to_Client_Hello{trans=A} -> FromA
	   [0] : trans_to_Server_Hello{trans=B} -> FromB
       [0] : trans_to_Server_Hello_Done{trans=C} -> FromC
       [0] : trans_to_Client_KE{trans=D} -> FromD
       [0] : trans_to_New_Session_Ticket{trans=E} -> FromE
       [0.86] : trans_to_Application_Data{trans=F} -> FromF
       [0.14] : trans_to_Stop{trans=Y} -> Stop
};

trace = FromX ;
#assert trace reaches goal with prob;






